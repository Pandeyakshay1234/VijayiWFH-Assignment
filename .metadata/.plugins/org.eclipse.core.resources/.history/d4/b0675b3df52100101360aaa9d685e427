//package com.taskmanagement.taskmanager;
//
////package com.taskmanagement.controllers;
//
//import com.fasterxml.jackson.databind.ObjectMapper;
//import com.taskmanagement.controllers.UserController;
//import com.taskmanagement.dto.UserDto;
//import com.taskmanagement.entity.User;
//import com.taskmanagement.services.UserService;
//
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.mockito.ArgumentMatchers;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.boot.test.autoconfigure.web.servlet.WebMvcTest;
//
//import org.springframework.boot.test.mock.mockito.MockBean;
//
//import org.springframework.http.MediaType;
//import org.springframework.test.web.servlet.MockMvc;
//
//import java.util.Arrays;
//import java.util.List;
//
//import static org.mockito.Mockito.*;
//
//import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;
//
//import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.*;
//
//@WebMvcTest(UserController.class)
//public class UserControllerTest {
//
//    @Autowired
//    private MockMvc mockMvc;
//
//    @MockBean
//    private UserService userService;
//
//    private UserDto userDto;
//    private User user;
//
//    @BeforeEach
//    public void setUp() {
//        userDto = new UserDto();
//        userDto.setFirstName("John");
//        userDto.setLastName("Doe");
//        userDto.setTimezone("UTC");
//        userDto.setActive(true);
//
//        user = new User();
//        user.setId(1L);
//        user.setFirstName("John");
//        user.setLastName("Doe");
//        user.setTimezone("UTC");
//        user.setActive(true);
//    }
//
//    @Test
//    public void testCreateUser() throws Exception {
//        when(userService.createUser(ArgumentMatchers.any(UserDto.class))).thenReturn(user);
//
//        mockMvc.perform(post("/api/user/create")
//                        .contentType(MediaType.APPLICATION_JSON)
//                        .content(new ObjectMapper().writeValueAsString(userDto)))
//                .andExpect(status().isCreated())
//                .andExpect(jsonPath("$.id").value(1L))
//                .andExpect(jsonPath("$.firstName").value("John"));
//
//        verify(userService, times(1)).createUser(any(UserDto.class));
//    }
//
//    @Test
//    public void testUpdateUser() throws Exception {
//        when(userService.updateUser(eq(1L), any(UserDto.class))).thenReturn(user);
//
//        mockMvc.perform(put("/api/user/update/1")
//                        .contentType(MediaType.APPLICATION_JSON)
//                        .content(new ObjectMapper().writeValueAsString(userDto)))
//                .andExpect(status().isOk())
//                .andExpect(jsonPath("$.id").value(1L))
//                .andExpect(jsonPath("$.firstName").value("John"));
//
//        verify(userService, times(1)).updateUser(eq(1L), any(UserDto.class));
//    }
//
//    @Test
//    public void testDeleteUser() throws Exception {
//        doNothing().when(userService).deleteUser(1L);
//
//        mockMvc.perform(delete("/api/user/delete/1"))
//                .andExpect(status().isOk());
//
//        verify(userService, times(1)).deleteUser(1L);
//    }
//
//    @Test
//    public void testGetUserById() throws Exception {
//        when(userService.getUserById(1L)).thenReturn(user);
//
//        mockMvc.perform(get("/api/user/getUser/1"))
//                .andExpect(status().isOk())
//                .andExpect(jsonPath("$.id").value(1L))
//                .andExpect(jsonPath("$.firstName").value("John"));
//
//        verify(userService, times(1)).getUserById(1L);
//    }
//
//    @Test
//    public void testGetAllUsers() throws Exception {
//        List<User> users = Arrays.asList(user);
//        when(userService.getAllUsers()).thenReturn(users);
//
//        mockMvc.perform(get("/api/user"))
//                .andExpect(status().isOk())
//                .andExpect(jsonPath("$.length()").value(1))
//                .andExpect(jsonPath("$[0].firstName").value("John"));
//
//        verify(userService, times(1)).getAllUsers();
//    }
//}
